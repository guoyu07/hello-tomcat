buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE")
        classpath("com.github.jengelman.gradle.plugins:shadow:1.2.4")
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'gradle/pipeline.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

jar {
    manifest {
        attributes("Main-Class": "io.pivotal.hellotomcat.launch.JarMain")
    }
}

shadowJar {
    from('src/main/webapp') {
       include '**/*'
    }
    exclude 'Class50/**'
    exclude 'lombok/**'
    exclude '**/AUTHORS'
    exclude '**/LICENSE'
    exclude '**/NOTICE'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/org/**'
    exclude 'META-INF/ASL2.0'
    exclude '**/*.inf'
    exclude '**/*.ico'
    exclude '**/*.txt'
    exclude '**/*.1'
    exclude '**/*.template'
    mergeServiceFiles()
}

group = 'io.pivotal'
version = getProp('newVersion') ?: '0.0.1-SNAPSHOT'

ext {
    projectGroupId = project.group
    projectArtifactId = project.name
    projectVersion = project.version
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://repo.spring.io/release" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile("com.github.pivotalservices:tomcat-launcher:edc72cb")
    compile("com.github.pivotalservices:spring-cloud-config-java-client:1f5a51f")

//    compile("org.springframework.cloud:spring-cloud-spring-service-connector:1.2.3.RELEASE")
    // If you intend to deploy the app to Cloud Foundry
//    compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:1.2.3.RELEASE")
    // To use Spring Cloud Connectors for development
    compile("org.springframework.cloud:spring-cloud-localconfig-connector:1.2.3.RELEASE")
    // If you intend to deploy the app to Pivotal Cloud Foundry
    compile("io.pivotal.spring.cloud:spring-cloud-services-cloudfoundry-connector:1.3.1.RELEASE")
    compile("io.pivotal.spring.cloud:spring-cloud-services-starter-config-client:1.3.1.RELEASE") {
        exclude group: 'org.apache.tomcat.embed'
    }
    compile("log4j:log4j:1.2.17")

    runtime('org.mariadb.jdbc:mariadb-java-client:1.5.7')

    testCompile("com.github.stefanbirkner:system-rules:1.16.1")
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

test {
    useJUnit {
        excludeCategories 'io.pivotal.hellotomcat.launch.IntegrationTest'
    }
}

task integrationTest(type: Test) {
    useJUnit {
        includeCategories 'io.pivotal.hellotomcat.launch.IntegrationTest'
    }
}

//check.dependsOn integrationTest
integrationTest.mustRunAfter test

String getProp(String propName) {
	return hasProperty(propName) ?
			(getProperty(propName) ?: System.properties[propName]) : System.properties[propName] ?:
			System.getenv(propName)
}

build.dependsOn('shadowJar')
assemble.dependsOn('shadowJar')
